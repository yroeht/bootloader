//ISR(IRQn, name, has_error, is_exception)
ISR(0, "#DE Divide-by-zero Error", 0, 1)
ISR(1, "#DB Debug", 0, 1)
ISR(2, "Non-maskable Interrupt", 0, 1)
ISR(3, "#BP Breakpoint", 0, 1)
ISR(4, "#OF Overflow", 0, 1)
ISR(5, "#BR Bound Range Exceeded", 0, 1)
ISR(6, "#UD Invalid Opcode", 0, 1)
ISR(7, "#NM Device Not Available", 0, 1)
ISR(8, "#DF Double Fault", 1, 1)
ISR(9, "Coprocessor Segement Overrun", 0, 1)
ISR(10, "#TS Invalide TSS", 1, 1)
ISR(11, "#NP Segment Not Present", 1, 1)
ISR(12, "#SS Stack-Segment Failt", 1, 1)
ISR(13, "#GP General Protection Fault", 1, 1)
ISR(14, "#PF Page Fault", 1, 1)
ISR(15, __func__, 0, 1)
ISR(16, "#MF x87 Floating-Point Exception", 0, 1)
ISR(17, "#AC Alignment Check", 1, 1)
ISR(18, "#MC Machine Check", 0, 1)
ISR(19, "#XM/#XF SIMD Floating-Point Exception", 0, 1)
ISR(20, "#VE Virtualization Exception", 0, 1)
ISR(21, "#CP Control Protecion Exception", 1, 1)
ISR(22, __func__, 0, 1)
ISR(23, __func__, 0, 1)
ISR(24, __func__, 0, 1)
ISR(25, __func__, 0, 1)
ISR(26, __func__, 0, 1)
ISR(27, __func__, 0, 1)
ISR(28, "#HV Hypervisor Injection Exception", 0, 1)
ISR(29, "#VC VMM Communication Exception", 1, 1)
ISR(30, "#SX Security Exception", 1, 1)
ISR(31, __func__, 0, 1)
ISR(128, "syscall handler", 1, 0)
